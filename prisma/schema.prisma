// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ciudades{
  id String @id @default(cuid())
  nombre String
}


model Usuario {
  id           String @id @default(cuid())
  nombre       String
  email        String   @unique
  password     String
  dni          Int 
  createdAt    DateTime @default(now())
  reservas     Reserva[] 
  emailVerified DateTime?
}


model Bus {
  placa        String   @id @unique
  capacidad    Int             
  viajes       Viaje[]         
  asientos     Asiento[]       
}


model Viaje {
  id           String   @id @default(cuid())
  origen       String           
  destino      String          
  fechaSalida  DateTime       
  fechaLlegada DateTime       
  precio       Float           
  busId        String         
  bus          Bus     @relation(fields: [busId], references: [placa])
  reservas     Reserva[]        
  createdAt    DateTime @default(now())
}


model Asiento {
  id           String   @id @default(cuid())
  numero       Int              
  busId        String           
  bus          Bus     @relation(fields: [busId], references: [placa])
  reservas     Reserva[]       
}


model Reserva {
  id           String   @id @default(cuid())
  usuarioId    String?           
  usuario      Usuario? @relation(fields: [usuarioId], references: [id])
  viajeId      String          
  asientoId    String           
  dni          String            
  viaje        Viaje   @relation(fields: [viajeId], references: [id])
  asiento      Asiento @relation(fields: [asientoId], references: [id])
  createdAt    DateTime @default(now())
}
